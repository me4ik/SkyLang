
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULTDIVnonassocGRLSGREQLSEQEQEQAND BLOCKE BLOCKS BRC BRO DIV EQ EQEQ GR GREQ ID IF IN INN LS LSEQ MINUS MULT NOT NUMBER OR PLUS SEMICOLON STRING VAR WHILE WRITE WRITEN program : statement\n                    | program statement\n        io : WRITE BRO expression BRC SEMICOLON\n              | WRITEN BRO expression BRC SEMICOLON\n              | IN BRO ID BRC SEMICOLON\n              | INN BRO ID BRC SEMICOLON\n        \n        statement : declaration\n                  | condition\n                  | cycle\n                  | expression SEMICOLON\n                  | io\n                  | assign\n        declaration : VAR ID EQ expression SEMICOLON\n                       | VAR ID SEMICOLON\n        assign : ID EQ expression SEMICOLONexpression : expression PLUS expression\n                      | expression MINUS expression\n                      | expression MULT expression\n                      | expression DIV expression\n                      | expression EQEQ expression\n                      | expression GREQ expression\n                      | expression LSEQ expression\n                      | expression LS expression\n                      | expression GR expression\n                      | expression AND expression\n                      | expression OR expression\n                      | NUMBER\n                      | ID\n                      | STRING\n                      | BRO expression BRC\n                      | NOT BRO expression BRC\n        condition : IF BRO expression BRC BLOCKS program BLOCKEcycle : WHILE BRO expression BRC BLOCKS program BLOCKE'
    
_lr_action_items = {'VAR':([0,1,2,3,4,5,7,8,21,22,57,68,76,77,78,79,80,81,82,83,84,85,86,],[9,9,-1,-7,-8,-9,-11,-12,-2,-10,-14,-15,-13,9,9,-3,-4,-5,-6,9,9,-32,-33,]),'IF':([0,1,2,3,4,5,7,8,21,22,57,68,76,77,78,79,80,81,82,83,84,85,86,],[11,11,-1,-7,-8,-9,-11,-12,-2,-10,-14,-15,-13,11,11,-3,-4,-5,-6,11,11,-32,-33,]),'WHILE':([0,1,2,3,4,5,7,8,21,22,57,68,76,77,78,79,80,81,82,83,84,85,86,],[13,13,-1,-7,-8,-9,-11,-12,-2,-10,-14,-15,-13,13,13,-3,-4,-5,-6,13,13,-32,-33,]),'NUMBER':([0,1,2,3,4,5,7,8,12,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,39,40,41,42,56,57,68,76,77,78,79,80,81,82,83,84,85,86,],[14,14,-1,-7,-8,-9,-11,-12,14,-2,-10,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-14,-15,-13,14,14,-3,-4,-5,-6,14,14,-32,-33,]),'ID':([0,1,2,3,4,5,7,8,9,12,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,39,40,41,42,43,44,56,57,68,76,77,78,79,80,81,82,83,84,85,86,],[10,10,-1,-7,-8,-9,-11,-12,34,38,-2,-10,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,65,66,38,-14,-15,-13,10,10,-3,-4,-5,-6,10,10,-32,-33,]),'STRING':([0,1,2,3,4,5,7,8,12,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,39,40,41,42,56,57,68,76,77,78,79,80,81,82,83,84,85,86,],[15,15,-1,-7,-8,-9,-11,-12,15,-2,-10,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-14,-15,-13,15,15,-3,-4,-5,-6,15,15,-32,-33,]),'BRO':([0,1,2,3,4,5,7,8,11,12,13,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,39,40,41,42,56,57,68,76,77,78,79,80,81,82,83,84,85,86,],[12,12,-1,-7,-8,-9,-11,-12,36,12,39,40,41,42,43,44,-2,-10,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,-14,-15,-13,12,12,-3,-4,-5,-6,12,12,-32,-33,]),'NOT':([0,1,2,3,4,5,7,8,12,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,39,40,41,42,56,57,68,76,77,78,79,80,81,82,83,84,85,86,],[16,16,-1,-7,-8,-9,-11,-12,16,-2,-10,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-14,-15,-13,16,16,-3,-4,-5,-6,16,16,-32,-33,]),'WRITE':([0,1,2,3,4,5,7,8,21,22,57,68,76,77,78,79,80,81,82,83,84,85,86,],[17,17,-1,-7,-8,-9,-11,-12,-2,-10,-14,-15,-13,17,17,-3,-4,-5,-6,17,17,-32,-33,]),'WRITEN':([0,1,2,3,4,5,7,8,21,22,57,68,76,77,78,79,80,81,82,83,84,85,86,],[18,18,-1,-7,-8,-9,-11,-12,-2,-10,-14,-15,-13,18,18,-3,-4,-5,-6,18,18,-32,-33,]),'IN':([0,1,2,3,4,5,7,8,21,22,57,68,76,77,78,79,80,81,82,83,84,85,86,],[19,19,-1,-7,-8,-9,-11,-12,-2,-10,-14,-15,-13,19,19,-3,-4,-5,-6,19,19,-32,-33,]),'INN':([0,1,2,3,4,5,7,8,21,22,57,68,76,77,78,79,80,81,82,83,84,85,86,],[20,20,-1,-7,-8,-9,-11,-12,-2,-10,-14,-15,-13,20,20,-3,-4,-5,-6,20,20,-32,-33,]),'$end':([1,2,3,4,5,7,8,21,22,57,68,76,79,80,81,82,85,86,],[0,-1,-7,-8,-9,-11,-12,-2,-10,-14,-15,-13,-3,-4,-5,-6,-32,-33,]),'BLOCKE':([2,3,4,5,7,8,21,22,57,68,76,79,80,81,82,83,84,85,86,],[-1,-7,-8,-9,-11,-12,-2,-10,-14,-15,-13,-3,-4,-5,-6,85,86,-32,-33,]),'SEMICOLON':([6,10,14,15,34,38,45,46,47,48,49,50,51,52,53,54,55,58,60,67,71,72,73,74,75,],[22,-28,-27,-29,57,-28,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,68,-30,76,-31,79,80,81,82,]),'PLUS':([6,10,14,15,37,38,45,46,47,48,49,50,51,52,53,54,55,58,59,60,61,62,63,64,67,71,],[23,-28,-27,-29,23,-28,-16,-17,-18,-19,-20,-21,-22,-23,-24,23,23,23,23,-30,23,23,23,23,23,-31,]),'MINUS':([6,10,14,15,37,38,45,46,47,48,49,50,51,52,53,54,55,58,59,60,61,62,63,64,67,71,],[24,-28,-27,-29,24,-28,-16,-17,-18,-19,-20,-21,-22,-23,-24,24,24,24,24,-30,24,24,24,24,24,-31,]),'MULT':([6,10,14,15,37,38,45,46,47,48,49,50,51,52,53,54,55,58,59,60,61,62,63,64,67,71,],[25,-28,-27,-29,25,-28,25,25,-18,-19,-20,-21,-22,-23,-24,25,25,25,25,-30,25,25,25,25,25,-31,]),'DIV':([6,10,14,15,37,38,45,46,47,48,49,50,51,52,53,54,55,58,59,60,61,62,63,64,67,71,],[26,-28,-27,-29,26,-28,26,26,-18,-19,-20,-21,-22,-23,-24,26,26,26,26,-30,26,26,26,26,26,-31,]),'EQEQ':([6,10,14,15,37,38,45,46,47,48,49,50,51,52,53,54,55,58,59,60,61,62,63,64,67,71,],[27,-28,-27,-29,27,-28,27,27,27,27,None,None,None,None,None,27,27,27,27,-30,27,27,27,27,27,-31,]),'GREQ':([6,10,14,15,37,38,45,46,47,48,49,50,51,52,53,54,55,58,59,60,61,62,63,64,67,71,],[28,-28,-27,-29,28,-28,28,28,28,28,None,None,None,None,None,28,28,28,28,-30,28,28,28,28,28,-31,]),'LSEQ':([6,10,14,15,37,38,45,46,47,48,49,50,51,52,53,54,55,58,59,60,61,62,63,64,67,71,],[29,-28,-27,-29,29,-28,29,29,29,29,None,None,None,None,None,29,29,29,29,-30,29,29,29,29,29,-31,]),'LS':([6,10,14,15,37,38,45,46,47,48,49,50,51,52,53,54,55,58,59,60,61,62,63,64,67,71,],[30,-28,-27,-29,30,-28,30,30,30,30,None,None,None,None,None,30,30,30,30,-30,30,30,30,30,30,-31,]),'GR':([6,10,14,15,37,38,45,46,47,48,49,50,51,52,53,54,55,58,59,60,61,62,63,64,67,71,],[31,-28,-27,-29,31,-28,31,31,31,31,None,None,None,None,None,31,31,31,31,-30,31,31,31,31,31,-31,]),'AND':([6,10,14,15,37,38,45,46,47,48,49,50,51,52,53,54,55,58,59,60,61,62,63,64,67,71,],[32,-28,-27,-29,32,-28,-16,-17,-18,-19,-20,-21,-22,-23,-24,32,32,32,32,-30,32,32,32,32,32,-31,]),'OR':([6,10,14,15,37,38,45,46,47,48,49,50,51,52,53,54,55,58,59,60,61,62,63,64,67,71,],[33,-28,-27,-29,33,-28,-16,-17,-18,-19,-20,-21,-22,-23,-24,33,33,33,33,-30,33,33,33,33,33,-31,]),'EQ':([10,34,],[35,56,]),'BRC':([14,15,37,38,45,46,47,48,49,50,51,52,53,54,55,59,60,61,62,63,64,65,66,71,],[-27,-29,60,-28,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,69,-30,70,71,72,73,74,75,-31,]),'BLOCKS':([69,70,],[77,78,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,77,78,],[1,83,84,]),'statement':([0,1,77,78,83,84,],[2,21,2,2,21,21,]),'declaration':([0,1,77,78,83,84,],[3,3,3,3,3,3,]),'condition':([0,1,77,78,83,84,],[4,4,4,4,4,4,]),'cycle':([0,1,77,78,83,84,],[5,5,5,5,5,5,]),'expression':([0,1,12,23,24,25,26,27,28,29,30,31,32,33,35,36,39,40,41,42,56,77,78,83,84,],[6,6,37,45,46,47,48,49,50,51,52,53,54,55,58,59,61,62,63,64,67,6,6,6,6,]),'io':([0,1,77,78,83,84,],[7,7,7,7,7,7,]),'assign':([0,1,77,78,83,84,],[8,8,8,8,8,8,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement','program',1,'p_program','parser.py',17),
  ('program -> program statement','program',2,'p_program','parser.py',18),
  ('io -> WRITE BRO expression BRC SEMICOLON','io',5,'p_io','parser.py',27),
  ('io -> WRITEN BRO expression BRC SEMICOLON','io',5,'p_io','parser.py',28),
  ('io -> IN BRO ID BRC SEMICOLON','io',5,'p_io','parser.py',29),
  ('io -> INN BRO ID BRC SEMICOLON','io',5,'p_io','parser.py',30),
  ('statement -> declaration','statement',1,'p_statement','parser.py',36),
  ('statement -> condition','statement',1,'p_statement','parser.py',37),
  ('statement -> cycle','statement',1,'p_statement','parser.py',38),
  ('statement -> expression SEMICOLON','statement',2,'p_statement','parser.py',39),
  ('statement -> io','statement',1,'p_statement','parser.py',40),
  ('statement -> assign','statement',1,'p_statement','parser.py',41),
  ('declaration -> VAR ID EQ expression SEMICOLON','declaration',5,'p_declaration','parser.py',46),
  ('declaration -> VAR ID SEMICOLON','declaration',3,'p_declaration','parser.py',47),
  ('assign -> ID EQ expression SEMICOLON','assign',4,'p_assign','parser.py',55),
  ('expression -> expression PLUS expression','expression',3,'p_expression','parser.py',59),
  ('expression -> expression MINUS expression','expression',3,'p_expression','parser.py',60),
  ('expression -> expression MULT expression','expression',3,'p_expression','parser.py',61),
  ('expression -> expression DIV expression','expression',3,'p_expression','parser.py',62),
  ('expression -> expression EQEQ expression','expression',3,'p_expression','parser.py',63),
  ('expression -> expression GREQ expression','expression',3,'p_expression','parser.py',64),
  ('expression -> expression LSEQ expression','expression',3,'p_expression','parser.py',65),
  ('expression -> expression LS expression','expression',3,'p_expression','parser.py',66),
  ('expression -> expression GR expression','expression',3,'p_expression','parser.py',67),
  ('expression -> expression AND expression','expression',3,'p_expression','parser.py',68),
  ('expression -> expression OR expression','expression',3,'p_expression','parser.py',69),
  ('expression -> NUMBER','expression',1,'p_expression','parser.py',70),
  ('expression -> ID','expression',1,'p_expression','parser.py',71),
  ('expression -> STRING','expression',1,'p_expression','parser.py',72),
  ('expression -> BRO expression BRC','expression',3,'p_expression','parser.py',73),
  ('expression -> NOT BRO expression BRC','expression',4,'p_expression','parser.py',74),
  ('condition -> IF BRO expression BRC BLOCKS program BLOCKE','condition',7,'p_condition','parser.py',84),
  ('cycle -> WHILE BRO expression BRC BLOCKS program BLOCKE','cycle',7,'p_cycle','parser.py',89),
]
